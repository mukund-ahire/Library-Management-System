/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package MainPackage;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

public class password extends javax.swing.JInternalFrame {

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    
    public password() {
        initComponents();
        lable.setVisible(false);
        textbox.setVisible(false);
        button.setVisible(false);
        con = DBclass.connect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        usernamebox = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        passwordbox = new javax.swing.JPasswordField();
        sign = new javax.swing.JButton();
        massege = new javax.swing.JLabel();
        lable = new javax.swing.JLabel();
        textbox = new javax.swing.JTextField();
        button = new javax.swing.JButton();

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("USER NAME");

        usernamebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameboxActionPerformed(evt);
            }
        });
        usernamebox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usernameboxKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("PASSWORD");

        passwordbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordboxKeyPressed(evt);
            }
        });

        sign.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        sign.setText("SIGN");
        sign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signActionPerformed(evt);
            }
        });
        sign.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                signKeyPressed(evt);
            }
        });

        massege.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        massege.setForeground(new java.awt.Color(204, 0, 0));

        lable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lable.setText("New Password");

        textbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textboxKeyPressed(evt);
            }
        });

        button.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        button.setText("UPDATE");
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        button.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(button)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lable, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(textbox, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(23, 23, 23)
                            .addComponent(usernamebox))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(massege, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(sign))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(23, 23, 23)
                            .addComponent(passwordbox))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernamebox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordbox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sign, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(massege, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lable, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textbox, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(button)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usernameboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameboxActionPerformed

    private void usernameboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameboxKeyPressed
        if (evt.getKeyCode() == 10 || evt.getKeyCode() == 40) {
            passwordbox.requestFocus();
        }
    }//GEN-LAST:event_usernameboxKeyPressed

    private void passwordboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordboxKeyPressed
        if (evt.getKeyCode() == 10) {
            sign.requestFocus();
        } else if (evt.getKeyCode() == 38) {
            usernamebox.requestFocus();
        }
    }//GEN-LAST:event_passwordboxKeyPressed

    private void signActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signActionPerformed

        massege.setText("");
        String username = usernamebox.getText();
        String password = new String(passwordbox.getPassword());

        try {

            pst = con.prepareStatement("SELECT * FROM login");
            rs = pst.executeQuery();
            rs.next();
            String u = rs.getString("username");
            String p = rs.getString("password");
            if (username.equals(u) && password.equals(p)) {

                lable.setVisible(true);
                textbox.setVisible(true);
                button.setVisible(true);
                usernamebox.setText("");
                passwordbox.setText("");

            } else {
                massege.setText("Invalid username or password !");
                lable.setVisible(false);
                textbox.setVisible(false);
                button.setVisible(false);
                usernamebox.setText("");
                passwordbox.setText("");
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_signActionPerformed

    private void signKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_signKeyPressed
        if (evt.getKeyCode() == 10) {

            massege.setText("");
            String username = usernamebox.getText();
            String password = new String(passwordbox.getPassword());

            try {

                pst = con.prepareStatement("SELECT * FROM login");
                rs = pst.executeQuery();
                rs.next();
                String u = rs.getString("username");
                String p = rs.getString("password");
                if (username.equals(u) && password.equals(p)) {

                    lable.setVisible(true);
                    textbox.setVisible(true);
                    button.setVisible(true);
                    usernamebox.setText("");
                    passwordbox.setText("");

                } else {
                    massege.setText("Invalid username or password !");
                    lable.setVisible(false);
                    textbox.setVisible(false);
                    button.setVisible(false);
                    usernamebox.setText("");
                    passwordbox.setText("");
                }

            } catch (Exception e) {
            }

        }
    }//GEN-LAST:event_signKeyPressed

    private void textboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textboxKeyPressed
        if (evt.getKeyCode() == 10) {

            button.requestFocus();
        }
    }//GEN-LAST:event_textboxKeyPressed

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed

        String password = textbox.getText();
        try {
            int y = JOptionPane.showConfirmDialog(null, "CONFIRM UPDATION");
            if (y == 0) {
                pst = con.prepareStatement("UPDATE login SET password='" + password + "'");
                pst.execute();
                textbox.setText("");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_buttonActionPerformed

    private void buttonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonKeyPressed

        if (evt.getKeyCode() == 10) {

            String password = textbox.getText();
            try {
                int y = JOptionPane.showConfirmDialog(null, "CONFIRM UPDATION");
                if (y == 0) {
                    pst = con.prepareStatement("UPDATE login SET password='" + password + "'");
                    pst.execute();
                    textbox.setText("");
                }
            } catch (Exception e) {
            }

        }
    }//GEN-LAST:event_buttonKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lable;
    private javax.swing.JLabel massege;
    private javax.swing.JPasswordField passwordbox;
    private javax.swing.JButton sign;
    private javax.swing.JTextField textbox;
    private javax.swing.JTextField usernamebox;
    // End of variables declaration//GEN-END:variables
}
