/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MainPackage;

//import com.mysql.cj.xdevapi.Statement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

public class addBooks extends javax.swing.JFrame {

    Connection con = null;
    PreparedStatement pst = null;
    PreparedStatement pst1 = null;
    ResultSet rs = null;

    public addBooks() {
        initComponents();
        searchbox.requestFocus();
        con = DBclass.connect();
        tableload();
    }

    public void tableload() {
        try {
            String q = "SELECT book_id,isbn,title,author FROM books";
            pst = con.prepareStatement(q);
            rs = pst.executeQuery();
            table.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {

        }
    }

    public void reset1() {

        tableload();
        idbox.setText("");
        isbnbox.setText("");
        titlebox.setText("");
        authorbox.setText("");
        catagorybox.setText("");
        pricebox.setText("");
        locationbox.setText("");
        detailsbox.setText("");
        searchbox.setText("");
        combo.setSelectedIndex(0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        idbox = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        isbnbox = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        titlebox = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        authorbox = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        locationbox = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        catagorybox = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        pricebox = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        detailsbox = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        add = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        search = new javax.swing.JButton();
        searchbox = new javax.swing.JTextField();
        combo = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BOOKS MAINTAINS");
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Book ID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 82, -1, 24));

        idbox.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(idbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 82, 66, 24));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("ISBN");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 119, 45, 31));

        isbnbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isbnboxActionPerformed(evt);
            }
        });
        isbnbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                isbnboxKeyPressed(evt);
            }
        });
        getContentPane().add(isbnbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 118, 248, 32));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Title");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 163, 45, 31));

        titlebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleboxActionPerformed(evt);
            }
        });
        titlebox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                titleboxKeyPressed(evt);
            }
        });
        getContentPane().add(titlebox, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 162, 248, 32));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Author");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 207, 65, 31));

        authorbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorboxActionPerformed(evt);
            }
        });
        authorbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                authorboxKeyPressed(evt);
            }
        });
        getContentPane().add(authorbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 206, 248, 32));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Location");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 339, 65, 31));

        locationbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationboxActionPerformed(evt);
            }
        });
        locationbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                locationboxKeyPressed(evt);
            }
        });
        getContentPane().add(locationbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(153, 338, 248, 32));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Catagory");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 251, -1, 31));

        catagorybox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catagoryboxActionPerformed(evt);
            }
        });
        catagorybox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                catagoryboxKeyPressed(evt);
            }
        });
        getContentPane().add(catagorybox, new org.netbeans.lib.awtextra.AbsoluteConstraints(153, 250, 248, 32));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Price Rs.");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 295, 52, 31));

        pricebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceboxActionPerformed(evt);
            }
        });
        pricebox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceboxKeyPressed(evt);
            }
        });
        getContentPane().add(pricebox, new org.netbeans.lib.awtextra.AbsoluteConstraints(153, 294, 248, 32));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Details");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 383, 65, 31));

        detailsbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailsboxActionPerformed(evt);
            }
        });
        detailsbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                detailsboxKeyPressed(evt);
            }
        });
        getContentPane().add(detailsbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(153, 382, 248, 32));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Book ID", "Title ", "ISBN", "Author"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 120, 650, 450));

        add.setBackground(new java.awt.Color(0, 0, 0));
        add.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("ADD");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        add.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addKeyPressed(evt);
            }
        });
        getContentPane().add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 426, 69, -1));

        update.setBackground(new java.awt.Color(0, 0, 0));
        update.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        update.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                updateKeyPressed(evt);
            }
        });
        getContentPane().add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 426, -1, -1));

        delete.setBackground(new java.awt.Color(0, 0, 0));
        delete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        delete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                deleteKeyPressed(evt);
            }
        });
        getContentPane().add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(231, 426, -1, -1));

        refresh.setBackground(new java.awt.Color(0, 0, 0));
        refresh.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        refresh.setForeground(new java.awt.Color(255, 255, 255));
        refresh.setText("REFRESH");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        refresh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                refreshKeyPressed(evt);
            }
        });
        getContentPane().add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(313, 426, -1, -1));

        search.setBackground(new java.awt.Color(0, 0, 0));
        search.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        search.setForeground(new java.awt.Color(255, 255, 255));
        search.setText("SEARCH");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 564, -1, 32));

        searchbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchboxActionPerformed(evt);
            }
        });
        searchbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchboxKeyPressed(evt);
            }
        });
        getContentPane().add(searchbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 524, 248, 32));

        combo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "book_id", "title", "isbn", "author", "catagory" }));
        combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboActionPerformed(evt);
            }
        });
        combo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboKeyPressed(evt);
            }
        });
        getContentPane().add(combo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 524, -1, 32));

        jLabel23.setFont(new java.awt.Font("Segoe Script", 1, 18)); // NOI18N
        jLabel23.setText("INQUIRY TABLE");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 80, -1, -1));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 0, 0));
        jLabel17.setText("*");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 114, 30, 40));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 0, 0));
        jLabel18.setText("*");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 164, 20, -1));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        jLabel19.setText("*");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 204, 20, 40));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 0, 0));
        jLabel20.setText("*");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 244, 20, 50));

        jLabel16.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 54, 430, 570));

        jLabel21.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(458, 54, 730, 570));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 620, 100, 20));
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 230, 20, 60));

        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton5.setText("MENU");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 14, -1, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 204));
        jLabel11.setText("ADD BOOKS");
        jLabel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 120, 29));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void isbnboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isbnboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isbnboxActionPerformed

    private void isbnboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_isbnboxKeyPressed
        int key = evt.getKeyCode();
        if (key == 10 || key == 40) {
            titlebox.requestFocus();
        }
    }//GEN-LAST:event_isbnboxKeyPressed

    private void titleboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleboxActionPerformed

    private void titleboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titleboxKeyPressed
        int key = evt.getKeyCode();
        if (key == 10 || key == 40) {
            authorbox.requestFocus();
        } else if (key == 38) {
            isbnbox.requestFocus();
        }
    }//GEN-LAST:event_titleboxKeyPressed

    private void authorboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorboxActionPerformed

    private void authorboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_authorboxKeyPressed
        int key = evt.getKeyCode();
        if (key == 10 || key == 40) {
            catagorybox.requestFocus();
        } else if (key == 38) {
            titlebox.requestFocus();
        }
    }//GEN-LAST:event_authorboxKeyPressed

    private void locationboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_locationboxActionPerformed

    private void locationboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_locationboxKeyPressed

        int key = evt.getKeyCode();
        if (key == 10 || key == 40) {
            detailsbox.requestFocus();
        } else if (key == 38) {
            pricebox.requestFocus();
        }
    }//GEN-LAST:event_locationboxKeyPressed

    private void catagoryboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catagoryboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_catagoryboxActionPerformed

    private void catagoryboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_catagoryboxKeyPressed
        int key = evt.getKeyCode();
        if (key == 10 || key == 40) {
            pricebox.requestFocus();
        } else if (key == 38) {
            authorbox.requestFocus();
        }
    }//GEN-LAST:event_catagoryboxKeyPressed

    private void priceboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceboxActionPerformed

    private void priceboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceboxKeyPressed

        int key = evt.getKeyCode();
        if (key == 10 || key == 40) {
            locationbox.requestFocus();
        } else if (key == 38) {
            catagorybox.requestFocus();
        }
    }//GEN-LAST:event_priceboxKeyPressed

    private void detailsboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailsboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_detailsboxActionPerformed

    private void detailsboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_detailsboxKeyPressed

        int key = evt.getKeyCode();
        if (key == 10) {
            add.requestFocus();
        } else if (key == 38) {
            locationbox.requestFocus();
        }
    }//GEN-LAST:event_detailsboxKeyPressed

    private void searchboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchboxActionPerformed

    private void searchboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchboxKeyPressed

        int key = evt.getKeyCode();
        if (key == 10) {
            String item = searchbox.getText();
            String sitem = combo.getSelectedItem().toString();
            try {
                String q = "SELECT book_id,isbn,title,author FROM books WHERE " + sitem + " LIKE '%" + item + "%'";
                pst = con.prepareStatement(q);
                rs = pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (Exception e) {
            }
        }

    }//GEN-LAST:event_searchboxKeyPressed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed

        String isbn = isbnbox.getText();
        String title = titlebox.getText();
        String author = authorbox.getText();
        String catagory = catagorybox.getText();
        String price = pricebox.getText();
        String location = locationbox.getText();
        String details = detailsbox.getText();

        if (!"".equals(isbn) && !"".equals(title) && !"".equals(author) && !"".equals(catagory)) {
            int x = JOptionPane.showConfirmDialog(null, "CONFIRM BOOK REGISTRATION ");
            if (x == 0) {
                try {
                    String q = "INSERT INTO books (isbn,title,author,catagory,price,location,details) VALUES ('" + isbn + "','" + title + "','" + author + "','" + catagory + "','" + price + "','" + location + "','" + details + "')";
                    pst = con.prepareStatement(q);
                    pst.execute();
                    reset1();

                    PreparedStatement pst2 = con.prepareStatement("SET @@SESSION.information_schema_stats_expiry=0");
                    pst2.execute();

                    pst1 = con.prepareStatement("SELECT AUTO_INCREMENT FROM information_schema.TABLES WHERE TABLE_NAME='books'");
                    rs = pst1.executeQuery();
                    rs.next();
                 
                    String z = Integer.toString(Integer.parseInt(rs.getString("AUTO_INCREMENT")) - 1);
                    PreparedStatement pst3 = con.prepareStatement("INSERT INTO availablility VALUE ('" + z + "','" + isbn + "','" + title + "')");
                    pst3.execute();

                } catch (Exception e) {
                    //System.out.println(e);
                }
            }
        }
    }//GEN-LAST:event_addActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked

        int row = table.getSelectedRow();
        String book_id = table.getValueAt(row, 0).toString();

        try {

            String q = "SELECT * FROM books WHERE book_id='" + book_id + "'";
            pst = con.prepareStatement(q);
            rs = pst.executeQuery();

            rs.next();
            idbox.setText(rs.getString("book_id"));
            isbnbox.setText(rs.getString("isbn"));
            titlebox.setText(rs.getString("title"));
            authorbox.setText(rs.getString("author"));
            catagorybox.setText(rs.getString("catagory"));
            pricebox.setText(rs.getString("price"));
            locationbox.setText(rs.getString("location"));
            detailsbox.setText(rs.getString("details"));

        } catch (Exception e) {
        }


    }//GEN-LAST:event_tableMouseClicked

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        reset1();
    }//GEN-LAST:event_refreshActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed

        String book_id = idbox.getText();
        String isbn = isbnbox.getText();
        String title = titlebox.getText();
        String author = authorbox.getText();
        String catagory = catagorybox.getText();
        String price = pricebox.getText();
        String location = locationbox.getText();
        String details = detailsbox.getText();

        if (!"".equals(isbn) && !"".equals(title) && !"".equals(author) && !"".equals(catagory)) {
            int x = JOptionPane.showConfirmDialog(null, "CONFIRM BOOK UPDATION ");
            if (x == 0) {
                try {

                    String q = "UPDATE books SET isbn='" + isbn + "',title='" + title + "',author= '" + author + "',catagory='" + catagory + "',price='" + price + "',location='" + location + "',details='" + details + "' WHERE book_id = '" + book_id + "'";
                    pst = con.prepareStatement(q);
                    pst.execute();
                    reset1();

                    pst1 = con.prepareStatement("UPDATE availablility SET isbn='" + isbn + "',title='" + title + "' WHERE book_id='" + book_id + "'");
                    pst1.execute();

                } catch (Exception e) {
                }
            }
        }

    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed

        String book_id = idbox.getText();

        int x = JOptionPane.showConfirmDialog(null, "CONFIRM BOOK DELETION ");
        if (x == 0) {
            try {

                ////////////////////
                PreparedStatement pst3 = con.prepareStatement("SELECT isbn,title,author FROM books WHERE book_id = '" + book_id + "'");
                rs = pst3.executeQuery();
                rs.next();
                String i = rs.getString("isbn");
                String t = rs.getString("title");
                String a = rs.getString("author");
                String d = LocalDate.now().toString();

                PreparedStatement pst2 = con.prepareStatement("INSERT INTO deletedbook VALUES('" + i + "','" + t + "','" + a + "','" + d + "')");
                pst2.execute();
                //////////////////

                String q = "DELETE FROM books WHERE book_id= '" + book_id + "'";
                pst = con.prepareStatement(q);
                pst.execute();
                tableload();

                pst1 = con.prepareStatement("DELETE FROM availablility WHERE book_id='" + book_id + "'");
                pst1.execute();

            } catch (Exception e) {
            }
        }


    }//GEN-LAST:event_deleteActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed

        String item = searchbox.getText();
        String sitem = combo.getSelectedItem().toString();
        try {
            String q = "SELECT book_id,isbn,title,author FROM books WHERE " + sitem + " LIKE '%" + item + "%'";
            pst = con.prepareStatement(q);
            rs = pst.executeQuery();
            table.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
        }


    }//GEN-LAST:event_searchActionPerformed

    private void tableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableKeyReleased

        int key = evt.getKeyCode();
        if (key == 10) {

            int row = table.getSelectedRow();
            String book_id = table.getValueAt(row, 0).toString();

            try {

                String q = "SELECT * FROM books WHERE book_id='" + book_id + "'";
                pst = con.prepareStatement(q);
                rs = pst.executeQuery();

                rs.next();
                idbox.setText(rs.getString("book_id"));
                isbnbox.setText(rs.getString("isbn"));
                titlebox.setText(rs.getString("title"));
                authorbox.setText(rs.getString("author"));
                catagorybox.setText(rs.getString("catagory"));
                pricebox.setText(rs.getString("price"));
                locationbox.setText(rs.getString("location"));
                detailsbox.setText(rs.getString("details"));

            } catch (Exception e) {
            }
        }

    }//GEN-LAST:event_tableKeyReleased

    private void addKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addKeyPressed
        int key = evt.getKeyCode();
        if (key == 10) {

            String isbn = isbnbox.getText();
            String title = titlebox.getText();
            String author = authorbox.getText();
            String catagory = catagorybox.getText();
            String price = pricebox.getText();
            String location = locationbox.getText();
            String details = detailsbox.getText();

            if (!"".equals(isbn) && !"".equals(title) && !"".equals(author) && !"".equals(catagory)) {
                int x = JOptionPane.showConfirmDialog(null, "CONFIRM BOOK REGISTRATION ");
                if (x == 0) {
                    try {
                        String q = "INSERT INTO books (isbn,title,author,catagory,price,location,details) VALUES ('" + isbn + "','" + title + "','" + author + "','" + catagory + "','" + price + "','" + location + "','" + details + "')";
                        pst = con.prepareStatement(q);
                        pst.execute();
                        reset1();

                        PreparedStatement pst2 = con.prepareStatement("SET @@SESSION.information_schema_stats_expiry=0");
                        pst2.execute();

                        pst1 = con.prepareStatement("SELECT AUTO_INCREMENT FROM information_schema.TABLES WHERE TABLE_NAME='books'");
                        rs = pst1.executeQuery();
                        rs.next();
                        //System.out.println(Integer.parseInt(rs.getString("AUTO_INCREMENT"))-1);
                        String z = Integer.toString(Integer.parseInt(rs.getString("AUTO_INCREMENT")) - 1);
                        PreparedStatement pst3 = con.prepareStatement("INSERT INTO availablility VALUE ('" + z + "','" + isbn + "','" + title + "')");
                        pst3.execute();

                    } catch (Exception e) {
                        System.out.println(e);
                    }
                }
            }
        } else if (key == 38) {
            detailsbox.requestFocus();
        } else if (key == 39) {
            update.requestFocus();
        }
    }//GEN-LAST:event_addKeyPressed

    private void updateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_updateKeyPressed

        int key = evt.getKeyCode();
        if (key == 10) {

            String book_id = idbox.getText();
            String isbn = isbnbox.getText();
            String title = titlebox.getText();
            String author = authorbox.getText();
            String catagory = catagorybox.getText();
            String price = pricebox.getText();
            String location = locationbox.getText();
            String details = detailsbox.getText();

            if (!"".equals(isbn) && !"".equals(title) && !"".equals(author) && !"".equals(catagory)) {
                int x = JOptionPane.showConfirmDialog(null, "CONFIRM BOOK UPDATION ");
                if (x == 0) {
                    try {

                        String q = "UPDATE books SET isbn='" + isbn + "',title='" + title + "',author= '" + author + "',catagory='" + catagory + "',price='" + price + "',location='" + location + "',details='" + details + "' WHERE book_id = '" + book_id + "'";
                        pst = con.prepareStatement(q);
                        pst.execute();
                        reset1();

                        pst1 = con.prepareStatement("UPDATE availablility SET isbn='" + isbn + "',title='" + title + "' WHERE book_id='" + book_id + "'");
                        pst1.execute();

                    } catch (Exception e) {
                    }
                }
            }
        } else if (key == 37) {
            add.requestFocus();
        } else if (key == 39) {
            delete.requestFocus();
        }

    }//GEN-LAST:event_updateKeyPressed

    private void deleteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deleteKeyPressed

        int key = evt.getKeyCode();
        if (key == 10) {

            String book_id = idbox.getText();

            int x = JOptionPane.showConfirmDialog(null, "CONFIRM BOOK DELETION ");
            if (x == 0) {
                try {

                    PreparedStatement pst3 = con.prepareStatement("SELECT isbn,title,author FROM books WHERE book_id = '" + book_id + "'");
                    rs = pst3.executeQuery();
                    rs.next();
                    String i = rs.getString("isbn");
                    String t = rs.getString("title");
                    String a = rs.getString("author");
                    String d = LocalDate.now().toString();

                    PreparedStatement pst2 = con.prepareStatement("INSERT INTO deletedbook VALUES('" + i + "','" + t + "','" + a + "','" + d + "')");
                    pst2.execute();

                    String q = "DELETE FROM books WHERE book_id= '" + book_id + "'";
                    pst = con.prepareStatement(q);
                    pst.execute();
                    tableload();

                    pst1 = con.prepareStatement("DELETE FROM availablility WHERE book_id='" + book_id + "'");
                    pst1.execute();
                } catch (Exception e) {
                }
            }

        } else if (key == 37) {
            update.requestFocus();
        } else if (key == 39) {
            refresh.requestFocus();
        }


    }//GEN-LAST:event_deleteKeyPressed

    private void refreshKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_refreshKeyPressed

        int key = evt.getKeyCode();
        if (key == 10) {
            reset1();
        } else if (key == 37) {
            delete.requestFocus();
        } else if (key == 40) {
            searchbox.requestFocus();
        }


    }//GEN-LAST:event_refreshKeyPressed

    private void comboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboKeyPressed

        int key = evt.getKeyCode();
        if (key == 10) {
            searchbox.requestFocus();
        }

    }//GEN-LAST:event_comboKeyPressed

    private void comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //menu x=new menu();
        //x.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addBooks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField authorbox;
    private javax.swing.JTextField catagorybox;
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JButton delete;
    private javax.swing.JTextField detailsbox;
    private javax.swing.JLabel idbox;
    private javax.swing.JTextField isbnbox;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField locationbox;
    private javax.swing.JTextField pricebox;
    private javax.swing.JButton refresh;
    private javax.swing.JButton search;
    private javax.swing.JTextField searchbox;
    private javax.swing.JTable table;
    private javax.swing.JTextField titlebox;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
